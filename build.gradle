buildscript {
    ext {
        springBootVersion = '2.0.5.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

allprojects {
    apply plugin: 'idea'
    apply plugin: 'eclipse'
}

// Instructions for each sub project
subprojects {

    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenCentral()
    }
}

project(':common') {
    eclipse {
        project {
            name = 'UrlShortener.common'
        }
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:$springBootVersion"
        }
    }

    dependencies {
        compile 'org.springframework.boot:spring-boot-starter-web'
        compile 'org.springframework.boot:spring-boot-starter-jdbc'
        compile 'org.springframework.hateoas:spring-hateoas'

        compile 'commons-validator:commons-validator:1.6'
        compile 'com.google.guava:guava:23.0'

        testCompile 'org.springframework.boot:spring-boot-starter-test'
        testRuntime 'org.hsqldb:hsqldb'
    }
}

project('team') {
    eclipse {
        project {
            name = 'UrlShortener.team'
        }
    }

    apply plugin: 'org.springframework.boot'

    sourceSets.main.java.srcDirs += "${buildDir}/generated-sources/jaxb"

    task genJaxb {
        ext.sourcesDir = "${buildDir}/generated-sources/jaxb"
        ext.schema = "src/main/resources/qr.xsd"

        inputs.file ext.schema
        outputs.dir ext.sourcesDir


        doFirst() {
            project.ant {
                taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
                        classpath: configurations.jaxb.asPath
                mkdir(dir: sourcesDir)

                xjc(destdir: sourcesDir, schema: schema, encoding: 'UTF-8') {
                    arg(value: "-wsdl")
                    produces(dir: sourcesDir, includes: "**/*.java")
                }
            }

        }
    }

    task afterEclipseImport {
        dependsOn "genJaxb"
    }

    compileJava.dependsOn genJaxb


    configurations {
        jaxb
    }


    repositories {
        mavenCentral()
    }

    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    
    dependencies {
        compile project(':common')

        runtime 'org.hsqldb:hsqldb'

        compile 'org.webjars:bootstrap:3.3.5'
        compile 'org.webjars:jquery:2.1.4'

        //QR Img
        compile 'commons-io:commons-io:2.4'

        //Csv
        compile 'net.sf.supercsv:super-csv:2.4.0'

        // WebSockets for sponsor
        compile("org.springframework.boot:spring-boot-starter-websocket")
        compile("org.webjars:webjars-locator-core")
        compile("org.webjars:sockjs-client:1.0.2")
        compile("org.webjars:stomp-websocket:2.3.3")

        //Soap for Qr
        compile "org.springframework.boot:spring-boot-starter-web-services"
        compile "org.apache.httpcomponents:httpclient"
        compile "wsdl4j:wsdl4j:1.6.3"
        
        jaxb "com.sun.xml.bind:jaxb-core:2.2.11"
        jaxb "com.sun.xml.bind:jaxb-xjc:2.2.11"

        testCompile "org.springframework.boot:spring-boot-starter-test"

        //  JPA
        compile("org.springframework.boot:spring-boot-starter-data-jpa")

        // Testing framework
        testCompile 'org.springframework.boot:spring-boot-starter-test'
        testCompile 'org.apache.httpcomponents:httpclient'
    }
}
